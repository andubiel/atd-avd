---
- name: Certify BGP resilency on a link failure
  hosts: ATD_LAB
  connection: local
  gather_facts: false
  collections:
    - arista.avd
    - arista.cvp
    - arista.eos
  vars:
    # Test reporting information
    test_name: BGP resilency on a Link Failure
    test_id: BGP1.1
    test_description: "Validate BGP Overlay resilency when a Leaf in an MLAG pair has its uplinks disabled.  BGP Overlay control-plane should continue to function and the data-plane should re-route from the uplinks to the MLAG links."

  tasks:
    - name: BGP link resilency certification test
      block:
        - name: "SETUP: Backup fabric and host configurations prior to destructive tests"
          arista.eos.eos_command:
            commands:
              - copy running-config flash:backup.cfg
          tags: [ setup ]

        - name: "SETUP: Delete test catalogs (if they already exist)"
          ansible.builtin.shell: "rm atd-inventory/custom_anta_catalogs/{{ item}}"
          loop:
            - "s1-host1.yml"
            - "s1-host2.yml"
            - "s1-leaf1.yml"
          tags: [ setup ]
          run_once: true
          ignore_errors: true

        - name: "SETUP: Remove certification results directories if they already exist"
          ansible.builtin.file:
            path: "{{ item }}"
            state: absent
          loop:
            - "atd-inventory/certification/bgp/pre_validate/test_results"
            - "atd-inventory/certification/bgp/step_1/test_results"
            - "atd-inventory/certification/bgp/post_validate/test_results"
            - "atd-inventory/certification/bgp/pre_validate"
            - "atd-inventory/certification/bgp/step_1"
            - "atd-inventory/certification/bgp/post_validate"
          tags: [ setup ]
          run_once: true

        - name: "SETUP: Create certification results directories"
          ansible.builtin.file:
            path: "{{ item }}"
            state: directory
          loop:
            - "atd-inventory/certification/bgp/pre_validate/test_results"
            - "atd-inventory/certification/bgp/step_1/test_results"
            - "atd-inventory/certification/bgp/post_validate/test_results"
          tags: [ setup ]
          run_once: true

        - name: "PRE-VALIDATE: Baseline fabrics current state using ANTA NRFU catalog"
          import_role:
            name: arista.avd.eos_validate_state
          vars:
            use_anta: true
            save_catalog: true
            output_dir_name: pre_validate
            output_dir: atd-inventory/certification/bgp/pre_validate
            test_catalogs_dir_name: test_catalogs
            test_catalogs_dir: atd-inventory/intended/test_catalogs
            eos_validate_state_name: pre_validate
            eos_validate_state_dir: atd-inventory/certification/bgp/pre_validate
            skip_tests:
              - category: system
                tests:
                  - VerifyNTP
          when: inventory_hostname in groups['ATD_FABRIC']
          tags: [ pre_validate ]

        - name: "PRE-VALIDATE: Read output of ANTA tests and assign a variable to them"
          ansible.builtin.set_fact:
            pre_results: "{{ lookup('file','/home/coder/project/labfiles/atd-avd/atd-inventory/certification/bgp/pre_validate/test_results/{{ inventory_hostname }}-results.json') }}"
          when: inventory_hostname in groups['ATD_FABRIC']
          tags: [ pre_validate ]

        # - name: check values of pre_results
        #   debug: var=hostvars[inventory_hostname].pre_results
        #   when: inventory_hostname in groups['ATD_FABRIC']

        - name: "PRE-VALIDATE: Verify that none of the pre-validation tests failed"
          delegate_to: localhost
          ansible.builtin.assert:
            that:
              - anta_data != "failure"
            success_msg: "anta_data: {{anta_data}}"
            fail_msg: "failure: {{anta_data}}"
            quiet: yes
          loop: "{{ hostvars[inventory_hostname].pre_results | map(attribute='result') | list }}"
          loop_control:
            loop_var: anta_data
          register: pre_register
          when: inventory_hostname in groups['ATD_FABRIC']
          tags: [ pre_validate ]

        - name: "STEP1 SETUP: Disable uplinks on s1-leaf1 to test BGP resilency"
          arista.eos.eos_command:
            commands:
              - configure
              - interface ethernet2
              - shutdown
              - interface ethernet3
              - shutdown
          when: "'s1-leaf1' in inventory_hostname"
          tags: [ step1_setup ]

        - name: "STEP1 CRITERIA: Add custom ANTA test catalogs for validation"
          ansible.builtin.copy:
            src: "../atd-inventory/certification/bgp/catalogs/{{ item }}"
            dest: "atd-inventory/custom_anta_catalogs/{{ item }}"
          loop:
            - "s1-host1.yml"
            - "s1-host2.yml"
            - "s1-leaf1.yml"
          tags: [ step1_criteria ]
          run_once: true

        - name: "STEP1 CRITERIA: Validate BGP resilency after uplink failure"
          import_role:
            name: eos_validate_state
          vars:
            use_anta: true
            save_catalog: true
            output_dir_name: step_1
            output_dir: atd-inventory/certification/bgp/step_1
            test_catalogs_dir_name: step_1
            test_catalogs_dir: atd-inventory/certification/bgp/step_1
            eos_validate_state_name: step_1
            eos_validate_state_dir: atd-inventory/certification/bgp/step_1
            skip_tests:
              - category: system
                tests:
                  - VerifyNTP
          when: "'s1-leaf1' in inventory_hostname or inventory_hostname in groups['ATD_HOSTS']"
          tags: [ step1_criteria ]

        - name: "STEP1 CRITERIA: Collect plain-text evidence for reporting"
          arista.eos.eos_command:
            commands: 
              - ping 10.1.10.12 source 10.1.10.11 repeat 5
          register: ping_evidence
          when: "'s1-host1' in inventory_hostname"
          tags: [ step1_criteria ]

        # - debug: var=ping_evidence
        #   when: "'s1-host1' in inventory_hostname"

        - name: "STEP1 CRITERIA: Collect plain-text evidence for reporting"
          arista.eos.eos_command:
            commands: 
              - show ip bgp summary
              - show bgp evpn summary
              - show ip interface brief
          register: bgp_evidence
          when: "'s1-leaf1' in inventory_hostname"
          tags: [ step1_criteria ]

        # - debug: var=bgp_evidence
        #   when: "'s1-leaf1' in inventory_hostname"

        - name: "STEP1 CRITERIA: Read output of ANTA tests and assign a variable to them"
          ansible.builtin.set_fact:
            step1_results: "{{ lookup('file','/home/coder/project/labfiles/atd-avd/atd-inventory/certification/bgp/step_1/test_results/{{ inventory_hostname }}-results.json') }}"
          when: "'s1-leaf1' in inventory_hostname or inventory_hostname in groups['ATD_HOSTS']"
          tags: [ step1_criteria ]

        # - name: check values of step1_results
        #   debug: var=hostvars[inventory_hostname].step1_results
        #   when: inventory_hostname in groups['ATD_FABRIC']

        - name: "STEP1 CRITERIA: Verify that none of the step1 tests failed"
          delegate_to: localhost
          ansible.builtin.assert:
            that:
              - anta_data.result != "failure" or (anta_data.result == "failure" and anta_data.messages is match('.*172.30.255.0.*172.30.255.2.*'))
            success_msg: "anta_data: {{anta_data}}"
            fail_msg: "failure: {{anta_data}}"
            quiet: yes
          loop: "{{ hostvars[inventory_hostname].step1_results }}"
          loop_control:
            loop_var: anta_data
          register: step1_register
          when: "'s1-leaf1' in inventory_hostname or inventory_hostname in groups['ATD_HOSTS']"
          tags: [ step1_criteria ]

      always:
        - name: "TEARDOWN: Restore backup fabric and host configuration after destructive tests"
          arista.eos.eos_command:
            commands:
              - configure replace flash:backup.cfg
          tags: [ teardown ]

        - name: "TEARDOWN: Delete test catalogs (if they exist)"
          ansible.builtin.shell: "rm atd-inventory/custom_anta_catalogs/{{ item}}"
          loop:
            - "s1-host1.yml"
            - "s1-host2.yml"
            - "s1-leaf1.yml"
          tags: [ teardown ]
          run_once: true
          ignore_errors: true

        - name: "POST-VALIDATE: Baseline fabrics current state using ANTA NRFU catalog"
          import_role:
            name: arista.avd.eos_validate_state
          vars:
            use_anta: true
            save_catalog: true
            output_dir_name: post_validate
            output_dir: atd-inventory/certification/bgp/post_validate
            test_catalogs_dir_name: post_validate
            test_catalogs_dir: atd-inventory/certification/bgp/post_validate
            eos_validate_state_name: post_validate
            eos_validate_state_dir: atd-inventory/certification/bgp/post_validate
            skip_tests:
              - category: system
                tests:
                  - VerifyNTP
          when: inventory_hostname in groups['ATD_FABRIC']
          tags: [ post_validate ]

        - name: "POST-VALIDATE: Read output of ANTA tests and assign a variable to them"
          ansible.builtin.set_fact:
            post_results: "{{ lookup('file','/home/coder/project/labfiles/atd-avd/atd-inventory/certification/bgp/post_validate/test_results/{{ inventory_hostname }}-results.json') }}"
          when: inventory_hostname in groups['ATD_FABRIC']
          tags: [ post_validate ]

        # - name: check values of post_results
        #   debug: var=hostvars[inventory_hostname].post_results
        #   when: inventory_hostname in groups['ATD_FABRIC']

        - name: "POST-VALIDATE: Verify that none of the post-validation tests failed"
          delegate_to: localhost
          ansible.builtin.assert:
            that:
              - anta_data != "failure"
            success_msg: "anta_data: {{anta_data}}"
            fail_msg: "failure: {{anta_data}}"
            quiet: yes
          loop: "{{ hostvars[inventory_hostname].post_results | map(attribute='result') | list }}"
          loop_control:
            loop_var: anta_data
          register: post_register
          when: inventory_hostname in groups['ATD_FABRIC']
          tags: [ post_validate ]
          ignore_errors: true

        - name: "REPORT: Use data from certification test to write a report"
          ansible.builtin.template:
            src: report.j2
            dest: "atd-inventory/reports/{{test_id | replace(' ','_')}}_{{now(utc=true,fmt='%Y%m%d%H%M%S')}}.md"
          tags: [ report ]
          run_once: true
